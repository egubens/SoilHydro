% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation.R
\name{vg_fit_optim}
\alias{vg_fit_optim}
\title{Fit Van Genuchten parameters by bounded L-BFGS-B}
\usage{
vg_fit_optim(
  data,
  id = NULL,
  id_value = NULL,
  theta,
  h,
  units = c("kPa", "hPa"),
  lower = c(0, 0, 1e-06, 1.01),
  upper = c(1.2, 1.2, 50, 8)
)
}
\arguments{
\item{data}{A \code{data.frame} with columns for ID (optional), \eqn{\theta}, and suction.}

\item{id}{Character string with the ID/treatment column name in \code{data}, or \code{NULL}
for a single (ungrouped) fit.}

\item{id_value}{Optional scalar to fit \strong{only one product} (rows where \code{data[[id]] == id_value}).
Ignored if \code{id} is \code{NULL}.}

\item{theta}{Character string column name for volumetric water content.}

\item{h}{Character string column name for suction/pressure head.}

\item{units}{Either \code{"kPa"} or \code{"hPa"} indicating the units of \code{h}.}

\item{lower, upper}{Numeric vectors of lower/upper bounds for
\code{c(theta_r, theta_s, alpha, n)}.}
}
\value{
A \code{data.frame} with columns:
\itemize{
\item \code{<ID>} the ID column (or \code{"ID"} if \code{id=NULL})
\item \code{.fit_ok} logical
\item \code{theta_r, theta_s, alpha, n, m}
\item \code{R2, RMSE}
}
}
\description{
Fits \eqn{\theta(h)} using Van Genuchten (kPa) per treatment/group.
Accepts raw suction in \strong{kPa or hPa} and standardizes to kPa internally.
}
\details{
Optimizer: \code{\link[stats]{optim}} with \code{method="L-BFGS-B"}.
}
\examples{
set.seed(1)

# Simulate two "treatments" with distinct VG parameters (in kPa)
tru <- list(
  A = list(theta_r = 0.05, theta_s = 0.42, alpha = 0.04, n = 1.45),
  B = list(theta_r = 0.04, theta_s = 0.46, alpha = 0.07, n = 1.55)
)
h_kPa <- c(0.1, 1, 3, 10, 33, 100, 300, 1000)  # typical lab suctions

sim_one <- function(id, p) {
  th <- vg_fun_kPa(h_kPa, p$theta_r, p$theta_s, p$alpha, p$n)
  th <- pmin(p$theta_s, pmax(0, th + rnorm(length(th), sd = 0.004)))
  data.frame(ID = id, h = h_kPa, theta = th)
}
df <- rbind(sim_one("A", tru$A), sim_one("B", tru$B))

# Fit per ID; units are "kPa" since h is in kPa
fits <- vg_fit_optim(data = df, id = "ID", theta = "theta", h = "h", units = "kPa")
fits

# Single (ungrouped) fit example:
one <- subset(df, ID == "A")
fit_one <- vg_fit_optim(data = one, id = NULL, theta = "theta", h = "h", units = "kPa")
fit_one
}
